name: Deploy to Amazon EC2

on:
  push:
    branches:
      - main

env:
  AWS_REGION: sa-east-1 # set this to your preferred AWS region, e.g. us-west-1
  SECURITYGROUP_NAME: ec2-sg # security group name that instances should have to be used on deployment

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Get instance address
      run: |
        AWS_JSON=$(aws ec2 describe-instances)
        EC2_ADDR="$(echo $AWS_JSON | jq -c --raw-output --arg sg_name ${{ env.SECURITYGROUP_NAME }} '.Reservations[].Instances | map(select( any(.SecurityGroups[]; .GroupName == $sg_name) )) | map(.PublicIpAddress + ",") | add')"
        echo $EC2_ADDR
        echo "EC2_ADDRESSES=$(node -e "console.log((\"$EC2_ADDR\").split(\",\").filter((address) => address.length).join(\",\"))")"
        echo "EC2_ADDRESSES=$(node -e "console.log((\"$EC2_ADDR\").split(\",\").filter((address) => address.length).join(\",\"))")" >> $GITHUB_ENV

    - name: checking env exists
      id: env-exists
      run: echo ${{ env.EC2_ADDRESSES }}
      
    - name: executing remote ssh commands using ssh key
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.EC2_ADDRESSES }}
        username: ${{ secrets.SSH_USERNAME }}
        sync: true
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: sh deploy.sh
